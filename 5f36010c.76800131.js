(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{133:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return p}));var a=n(0),o=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),b=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=b(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),d=b(n),u=a,p=d["".concat(l,".").concat(u)]||d[u]||h[u]||c;return n?o.a.createElement(p,i(i({ref:t},s),{},{components:n})):o.a.createElement(p,i({ref:t},s))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,l=new Array(c);l[0]=u;var i={};for(var r in t)hasOwnProperty.call(t,r)&&(i[r]=t[r]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<c;s++)l[s]=n[s];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return r})),n.d(t,"default",(function(){return b}));var a=n(3),o=n(7),c=(n(0),n(133)),l={id:"01-cti-flow-blocks",title:"Appendix D: CTI Flow Blocks"},i={unversionedId:"classic/05-appendices/04-appendix-d-cti-flow-blocks/01-cti-flow-blocks",id:"classic/05-appendices/04-appendix-d-cti-flow-blocks/01-cti-flow-blocks",isDocsHomePage:!1,title:"Appendix D: CTI Flow Blocks",description:"If-else",source:"@site/docs/classic/05-appendices/04-appendix-d-cti-flow-blocks/01-cti-flow-blocks.md",slug:"/classic/05-appendices/04-appendix-d-cti-flow-blocks/01-cti-flow-blocks",permalink:"/amazon-connect-salesforce-cti/docs/classic/05-appendices/04-appendix-d-cti-flow-blocks/01-cti-flow-blocks",editUrl:"https://github.com/amazon-connect/amazon-connect-salesforce-cti/docs/classic/05-appendices/04-appendix-d-cti-flow-blocks/01-cti-flow-blocks.md",version:"current",sidebar:"classic",previous:{title:"Appendix C: CTI Flow Examples",permalink:"/amazon-connect-salesforce-cti/docs/classic/05-appendices/03-appendix-c-cti-flow-examples/01-cti-flow-examples"}},r=[{value:"If-else",id:"if-else",children:[]},{value:"HTTP Request",id:"http-request",children:[]},{value:"Get Property",id:"get-property",children:[]},{value:"Get All Properties",id:"get-all-properties",children:[]},{value:"Format Phone Number",id:"format-phone-number",children:[]},{value:"Format Phone Number (E164)",id:"format-phone-number-e164",children:[]},{value:"Format a Date object",id:"format-a-date-object",children:[]},{value:"Is Truthy?",id:"is-truthy",children:[]},{value:"Set Property",id:"set-property",children:[]},{value:"Log to Console",id:"log-to-console",children:[]},{value:"Show Modal",id:"show-modal",children:[]},{value:"Enable Click To Dial?",id:"enable-click-to-dial",children:[]},{value:"Enable Click To Dial",id:"enable-click-to-dial-1",children:[]},{value:"Disable Click To Dial",id:"disable-click-to-dial",children:[]},{value:"Get App View Info",id:"get-app-view-info",children:[]},{value:"Get Softphone Layout",id:"get-softphone-layout",children:[]},{value:"Get Agent Workload on Salesforce",id:"get-agent-workload-on-salesforce",children:[]},{value:"Complete High Velocity Sales Work With Task Saved",id:"complete-high-velocity-sales-work-with-task-saved",children:[]},{value:"Refresh View",id:"refresh-view",children:[]},{value:"Show Softphone Panel",id:"show-softphone-panel",children:[]},{value:"Hide Softphone Panel",id:"hide-softphone-panel",children:[]},{value:"Set Softphone Panel Height",id:"set-softphone-panel-height",children:[]},{value:"Set Softphone Panel Width",id:"set-softphone-panel-width",children:[]},{value:"Screenpop Object",id:"screenpop-object",children:[]},{value:"Screenpop Url",id:"screenpop-url",children:[]},{value:"Screenpop Object Home",id:"screenpop-object-home",children:[]},{value:"Screenpop List",id:"screenpop-list",children:[]},{value:"Screenpop Search",id:"screenpop-search",children:[]},{value:"Screenpop New Record",id:"screenpop-new-record",children:[]},{value:"Search And Screenpop",id:"search-and-screenpop",children:[]},{value:"Run Apex",id:"run-apex",children:[]},{value:"Get Agent State from Salesforce",id:"get-agent-state-from-salesforce",children:[]},{value:"Set Agent State on Salesforce",id:"set-agent-state-on-salesforce",children:[]},{value:"Login Agent on Salesforce",id:"login-agent-on-salesforce",children:[]},{value:"Logout Agent on Salesforce",id:"logout-agent-on-salesforce",children:[]},{value:"Save (or Create) a Record",id:"save-or-create-a-record",children:[]},{value:"Create a Task",id:"create-a-task",children:[]},{value:"Is Contact &quot;Do Not Call&quot;?",id:"is-contact-do-not-call",children:[]},{value:"Dial Number",id:"dial-number",children:[]},{value:"Mute Agent",id:"mute-agent",children:[]},{value:"Unmute Agent",id:"unmute-agent",children:[]},{value:"Get Agent Status from Connect",id:"get-agent-status-from-connect",children:[]},{value:"Set Agent Status on Connect",id:"set-agent-status-on-connect",children:[]},{value:"Set Agent Status By Name on Connect",id:"set-agent-status-by-name-on-connect",children:[]},{value:"Set Agent as Available on Connect",id:"set-agent-as-available-on-connect",children:[]},{value:"Get Quick Connection List",id:"get-quick-connection-list",children:[]},{value:"Get Transfer Connection List",id:"get-transfer-connection-list",children:[]},{value:"Get Endpoint by Phone Number",id:"get-endpoint-by-phone-number",children:[]},{value:"Get Available Agent States",id:"get-available-agent-states",children:[]},{value:"Get Agent Name",id:"get-agent-name",children:[]},{value:"Get Agent Extension",id:"get-agent-extension",children:[]},{value:"Get Agent Deskphone Number",id:"get-agent-deskphone-number",children:[]},{value:"Is Agent Softphone Enabled?",id:"is-agent-softphone-enabled",children:[]},{value:"Change Agent to Softphone",id:"change-agent-to-softphone",children:[]},{value:"Change Agent to Deskphone",id:"change-agent-to-deskphone",children:[]},{value:"Get Agent Configuration",id:"get-agent-configuration",children:[]},{value:"Get Agent Dialable Countries",id:"get-agent-dialable-countries",children:[]},{value:"Create Task Contact",id:"create-task-contact",children:[]},{value:"Get Contact Attribute",id:"get-contact-attribute",children:[]},{value:"Is Voice Contact?",id:"is-voice-contact",children:[]},{value:"Is Chat Contact?",id:"is-chat-contact",children:[]},{value:"Is Task Contact?",id:"is-task-contact",children:[]},{value:"Is Contact Inbound?",id:"is-contact-inbound",children:[]},{value:"Is Contact Transfer?",id:"is-contact-transfer",children:[]},{value:"Is Callback?",id:"is-callback",children:[]},{value:"Get Contact Properties",id:"get-contact-properties",children:[]},{value:"Get Customer Phone Number",id:"get-customer-phone-number",children:[]},{value:"Get Contact Interaction Metadata",id:"get-contact-interaction-metadata",children:[]},{value:"Pop Task Contact&#39;s Reference Urls",id:"pop-task-contacts-reference-urls",children:[]},{value:"Query value",id:"query-value",children:[]},{value:"Get Salesforce Lead Id",id:"get-salesforce-lead-id",children:[]},{value:"Open Salesforce Primary Tab",id:"open-salesforce-primary-tab",children:[]},{value:"Open Salesforce Sub Tab",id:"open-salesforce-sub-tab",children:[]},{value:"Get Focused Primary Tab Object Id",id:"get-focused-primary-tab-object-id",children:[]},{value:"Get Focused Subtab Object Id",id:"get-focused-subtab-object-id",children:[]},{value:"Call jQuery Method",id:"call-jquery-method",children:[]},{value:"Replace String",id:"replace-string",children:[]},{value:"Text Starts With Value",id:"text-starts-with-value",children:[]},{value:"Text Ends With Value",id:"text-ends-with-value",children:[]},{value:"Join Strings",id:"join-strings",children:[]},{value:"SOQL Query",id:"soql-query",children:[]},{value:"Multiply",id:"multiply",children:[]},{value:"Divide",id:"divide",children:[]},{value:"Get Tab Object Map",id:"get-tab-object-map",children:[]},{value:"Close Salesforce Tab",id:"close-salesforce-tab",children:[]},{value:"Delay",id:"delay",children:[]},{value:"Get Primary Tab Ids",id:"get-primary-tab-ids",children:[]},{value:"Get Tabs With Matching Url",id:"get-tabs-with-matching-url",children:[]},{value:"Length",id:"length",children:[]},{value:"Slice",id:"slice",children:[]},{value:"Cast a Value to a Type",id:"cast-a-value-to-a-type",children:[]},{value:"Get CCP Logs",id:"get-ccp-logs",children:[]},{value:"Clear All Properties",id:"clear-all-properties",children:[]},{value:"Unset Property",id:"unset-property",children:[]},{value:"Show Attributes",id:"show-attributes",children:[]},{value:"Is Task Contact?",id:"is-task-contact-1",children:[]},{value:"Create Task Contact",id:"create-task-contact-1",children:[]},{value:"Pop Task Contact&#39;s Reference Urls",id:"pop-task-contacts-reference-urls-1",children:[]},{value:"Start Recording",id:"start-recording",children:[]},{value:"Stop Recording",id:"stop-recording",children:[]},{value:"Update Contact Attributes",id:"update-contact-attributes",children:[]},{value:"Get Payload",id:"get-payload",children:[]},{value:"Send Data to CCP Overlay",id:"send-data-to-ccp-overlay",children:[]},{value:"Leave a Voicemail",id:"leave-a-voicemail",children:[]}],s={toc:r};function b(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h3",{id:"if-else"},"If-else"),Object(c.b)("p",null,'Change the flow of your script depending on value of fields you fetch or\nstore. This is a simple "if-else" utility for your flow.'),Object(c.b)("h3",{id:"http-request"},"HTTP Request"),Object(c.b)("p",null,"Make an HTTP request."),Object(c.b)("h3",{id:"get-property"},"Get Property"),Object(c.b)("p",null,"Fetches a property from the local data store. You can access a property\nyou have retrieved from the local store by referring to the return value\nof this block."),Object(c.b)("h3",{id:"get-all-properties"},"Get All Properties"),Object(c.b)("p",null,"Returns all stored properties."),Object(c.b)("h3",{id:"format-phone-number"},"Format Phone Number"),Object(c.b)("p",null,"Formats a phone number for a country code."),Object(c.b)("h3",{id:"format-phone-number-e164"},"Format Phone Number (E164)"),Object(c.b)("p",null,"Formats a phone number for a country code in E164 format."),Object(c.b)("h3",{id:"format-a-date-object"},"Format a Date object"),Object(c.b)("p",null,"Returns a formatted date."),Object(c.b)("h3",{id:"is-truthy"},"Is Truthy?"),Object(c.b)("p",null,"This is a utility to branch your flow depending on the truthiness of a\nvalue."),Object(c.b)("h3",{id:"set-property"},"Set Property"),Object(c.b)("p",null,"Assigns a value to a property in the local data store."),Object(c.b)("h3",{id:"log-to-console"},"Log to Console"),Object(c.b)("p",null,"Sends a static or dynamic value from an action to a logger."),Object(c.b)("h3",{id:"show-modal"},"Show Modal"),Object(c.b)("p",null,"The command to open modal."),Object(c.b)("h3",{id:"enable-click-to-dial"},"Enable Click To Dial?"),Object(c.b)("p",null,"The query to determine whether Click to Dial should be enabled."),Object(c.b)("h3",{id:"enable-click-to-dial-1"},"Enable Click To Dial"),Object(c.b)("p",null,"The command to enable Click to Dial."),Object(c.b)("h3",{id:"disable-click-to-dial"},"Disable Click To Dial"),Object(c.b)("p",null,"The command to disable Click to Dial."),Object(c.b)("h3",{id:"get-app-view-info"},"Get App View Info"),Object(c.b)("p",null,"The command to get App View information."),Object(c.b)("h3",{id:"get-softphone-layout"},"Get Softphone Layout"),Object(c.b)("p",null,"The query to get softphone layout."),Object(c.b)("h3",{id:"get-agent-workload-on-salesforce"},"Get Agent Workload on Salesforce"),Object(c.b)("p",null,"Returns the agent's current workload."),Object(c.b)("h3",{id:"complete-high-velocity-sales-work-with-task-saved"},"Complete High Velocity Sales Work With Task Saved"),Object(c.b)("p",null,"This methods allow your CTI implementation to communicate with High\nVelocity Sales (HVS) to handle HVS work."),Object(c.b)("h3",{id:"refresh-view"},"Refresh View"),Object(c.b)("p",null,"The command to refresh the view."),Object(c.b)("h3",{id:"show-softphone-panel"},"Show Softphone Panel"),Object(c.b)("p",null,"The command to show softphone panel."),Object(c.b)("h3",{id:"hide-softphone-panel"},"Hide Softphone Panel"),Object(c.b)("p",null,"The command to hide softphone panel."),Object(c.b)("h3",{id:"set-softphone-panel-height"},"Set Softphone Panel Height"),Object(c.b)("p",null,"The command to set the height of softphone panel."),Object(c.b)("h3",{id:"set-softphone-panel-width"},"Set Softphone Panel Width"),Object(c.b)("p",null,"The command to set the width of softphone panel."),Object(c.b)("h3",{id:"screenpop-object"},"Screenpop Object"),Object(c.b)("p",null,"The command to open a screenpop with information from object."),Object(c.b)("h3",{id:"screenpop-url"},"Screenpop Url"),Object(c.b)("p",null,"The command to screenpop a url in a new browser tab or browser window."),Object(c.b)("h3",{id:"screenpop-object-home"},"Screenpop Object Home"),Object(c.b)("p",null,"The command to screenpop to an object's home page."),Object(c.b)("h3",{id:"screenpop-list"},"Screenpop List"),Object(c.b)("p",null,"The command to screenpop a list view."),Object(c.b)("h3",{id:"screenpop-search"},"Screenpop Search"),Object(c.b)("p",null,'The command to screenpop search results based upon the search input. Not\nto be consued with "Search And Screenpop."'),Object(c.b)("h3",{id:"screenpop-new-record"},"Screenpop New Record"),Object(c.b)("p",null,"The command to screenpop to a new record of the specified type with\nspecified default field values."),Object(c.b)("h3",{id:"search-and-screenpop"},"Search And Screenpop"),Object(c.b)("p",null,'This command searches objects specified in the softphone layout for a\ngiven string. Returns search results and screen pops any matching\nrecords. Not to be consued with "Screenpop Search."'),Object(c.b)("h3",{id:"run-apex"},"Run Apex"),Object(c.b)("p",null,"The command to run an apex function."),Object(c.b)("h3",{id:"get-agent-state-from-salesforce"},"Get Agent State from Salesforce"),Object(c.b)("p",null,"The command to get an agent's state."),Object(c.b)("h3",{id:"set-agent-state-on-salesforce"},"Set Agent State on Salesforce"),Object(c.b)("p",null,"The command to set an agent's presence state on Salesforce."),Object(c.b)("h3",{id:"login-agent-on-salesforce"},"Login Agent on Salesforce"),Object(c.b)("p",null,"The command to login an agent on Salesforce."),Object(c.b)("h3",{id:"logout-agent-on-salesforce"},"Logout Agent on Salesforce"),Object(c.b)("p",null,"The command to logout an agent on Salesforce."),Object(c.b)("h3",{id:"save-or-create-a-record"},"Save (or Create) a Record"),Object(c.b)("p",null,"The command to save or create a Salesforce object."),Object(c.b)("h3",{id:"create-a-task"},"Create a Task"),Object(c.b)("p",null,"The command to create a Task. (The Subject of the task will be a string\nmade up of upto 3 field values.)"),Object(c.b)("h3",{id:"is-contact-do-not-call"},'Is Contact "Do Not Call"?'),Object(c.b)("p",null,"The query to check if the Contact requested not to be called."),Object(c.b)("h3",{id:"dial-number"},"Dial Number"),Object(c.b)("p",null,"The command to dial a phone number or to conference to an endpoint."),Object(c.b)("h3",{id:"mute-agent"},"Mute Agent"),Object(c.b)("p",null,"The command to mute the agent."),Object(c.b)("h3",{id:"unmute-agent"},"Unmute Agent"),Object(c.b)("p",null,"The command to unmute the agent."),Object(c.b)("h3",{id:"get-agent-status-from-connect"},"Get Agent Status from Connect"),Object(c.b)("p",null,"The command to get the current presence status of the agent from\nConnect."),Object(c.b)("h3",{id:"set-agent-status-on-connect"},"Set Agent Status on Connect"),Object(c.b)("p",null,"The command to set the current presence status of the agent on Connect."),Object(c.b)("h3",{id:"set-agent-status-by-name-on-connect"},"Set Agent Status By Name on Connect"),Object(c.b)("p",null,"The command to set the current presence status of the agent on Connect\nby name of the state."),Object(c.b)("h3",{id:"set-agent-as-available-on-connect"},"Set Agent as Available on Connect"),Object(c.b)("p",null,'The command to set the current state of the agent to "Available."'),Object(c.b)("h3",{id:"get-quick-connection-list"},"Get Quick Connection List"),Object(c.b)("p",null,"Gets the list of quick connects available to the current agent"),Object(c.b)("h3",{id:"get-transfer-connection-list"},"Get Transfer Connection List"),Object(c.b)("p",null,"Gets the list of quick connects available to the current agent."),Object(c.b)("h3",{id:"get-endpoint-by-phone-number"},"Get Endpoint by Phone Number"),Object(c.b)("p",null,"Generates and returns an endpoint for a provided phone number."),Object(c.b)("h3",{id:"get-available-agent-states"},"Get Available Agent States"),Object(c.b)("p",null,"Gets all of the available agent states including custom states."),Object(c.b)("h3",{id:"get-agent-name"},"Get Agent Name"),Object(c.b)("p",null,"Returns the agent's user friendly display name for the agent."),Object(c.b)("h3",{id:"get-agent-extension"},"Get Agent Extension"),Object(c.b)("p",null,"Returns the phone number that is dialed by Amazon Connect to connect\ncalls to the agent for incoming and outgoing calls, if softphone is not\nenabled."),Object(c.b)("h3",{id:"get-agent-deskphone-number"},"Get Agent Deskphone Number"),Object(c.b)("p",null,"Returns the phone number that is dialed by Amazon Connect to connect\ncalls to the agent for incoming and outgoing calls, if softphone is not\nenabled."),Object(c.b)("h3",{id:"is-agent-softphone-enabled"},"Is Agent Softphone Enabled?"),Object(c.b)("p",null,"Checks if agent softphone is enabled. Branches in different directions\nif it is or not."),Object(c.b)("h3",{id:"change-agent-to-softphone"},"Change Agent to Softphone"),Object(c.b)("p",null,"Changes the current agent to softphone mode."),Object(c.b)("h3",{id:"change-agent-to-deskphone"},"Change Agent to Deskphone"),Object(c.b)("p",null,"Changes the current agent to desktop phone mode with the specified phone\nnumber."),Object(c.b)("h3",{id:"get-agent-configuration"},"Get Agent Configuration"),Object(c.b)("p",null,"Returns the phone number that is dialed by Amazon Connect to connect\ncalls to the agent for incoming and outgoing calls, if softphone is not\nenabled."),Object(c.b)("h3",{id:"get-agent-dialable-countries"},"Get Agent Dialable Countries"),Object(c.b)("p",null,"Returns the list of dialable countries for the current agent."),Object(c.b)("h3",{id:"create-task-contact"},"Create Task Contact"),Object(c.b)("p",null,"The command to create a task contact that is sent to the provided quick\nconnect endpoint. The quick connect must be available to any queue the\nagent has access too."),Object(c.b)("h3",{id:"get-contact-attribute"},"Get Contact Attribute"),Object(c.b)("p",null,"The command to get value of an attribute from the contact in the current\nsession."),Object(c.b)("h3",{id:"is-voice-contact"},"Is Voice Contact?"),Object(c.b)("p",null,"The command to determine if the contact is a voice contact."),Object(c.b)("h3",{id:"is-chat-contact"},"Is Chat Contact?"),Object(c.b)("p",null,"The command to determine if the contact is a chat contact."),Object(c.b)("h3",{id:"is-task-contact"},"Is Task Contact?"),Object(c.b)("p",null,"The command to determine if the contact is an amazon connect task contact."),Object(c.b)("h3",{id:"is-contact-inbound"},"Is Contact Inbound?"),Object(c.b)("p",null,"The command to determine if the contact is inbound."),Object(c.b)("h3",{id:"is-contact-transfer"},"Is Contact Transfer?"),Object(c.b)("p",null,"The command to determine if the contact is transferred."),Object(c.b)("h3",{id:"is-callback"},"Is Callback?"),Object(c.b)("p",null,"The command to determine if the contact is a queue callback."),Object(c.b)("h3",{id:"get-contact-properties"},"Get Contact Properties"),Object(c.b)("p",null,"The command to get properties of a contact."),Object(c.b)("h3",{id:"get-customer-phone-number"},"Get Customer Phone Number"),Object(c.b)("p",null,"The command to get customer phone number of a contact."),Object(c.b)("h3",{id:"get-contact-interaction-metadata"},"Get Contact Interaction Metadata"),Object(c.b)("p",null,"The command to get metadata about a contact interaction."),Object(c.b)("h3",{id:"pop-task-contacts-reference-urls"},"Pop Task Contact's Reference Urls"),Object(c.b)("p",null,"The command to pop any reference urls if the contact is a task.\nReturns the number of urls popped."),Object(c.b)("h3",{id:"query-value"},"Query value"),Object(c.b)("p",null,"The query to execute an arbitrary SOQL statement and returns the\nresults."),Object(c.b)("h3",{id:"get-salesforce-lead-id"},"Get Salesforce Lead Id"),Object(c.b)("p",null,"The command to get a salesforce lead id using a formatted phone number."),Object(c.b)("h3",{id:"open-salesforce-primary-tab"},"Open Salesforce Primary Tab"),Object(c.b)("p",null,"Opens a new primary tab to display the content of the specified URL."),Object(c.b)("h3",{id:"open-salesforce-sub-tab"},"Open Salesforce Sub Tab"),Object(c.b)("p",null,"Opens a new subtab (within a primary tab) that displays the content of a\nspecified URL."),Object(c.b)("h3",{id:"get-focused-primary-tab-object-id"},"Get Focused Primary Tab Object Id"),Object(c.b)("p",null,"Returns the object ID of the primary tab on which the browser is\nfocused."),Object(c.b)("h3",{id:"get-focused-subtab-object-id"},"Get Focused Subtab Object Id"),Object(c.b)("p",null,"Returns the object ID of the subtab on which the browser is focused."),Object(c.b)("h3",{id:"call-jquery-method"},"Call jQuery Method"),Object(c.b)("p",null,"Perform a method call on a jQuery selection with your arguments."),Object(c.b)("h3",{id:"replace-string"},"Replace String"),Object(c.b)("p",null,"Perform a .replace() method on an input string."),Object(c.b)("h3",{id:"text-starts-with-value"},"Text Starts With Value"),Object(c.b)("p",null,"Checks whether a text input starts with one of the values."),Object(c.b)("h3",{id:"text-ends-with-value"},"Text Ends With Value"),Object(c.b)("p",null,"Checks whether a text input ends with one of the values."),Object(c.b)("h3",{id:"join-strings"},"Join Strings"),Object(c.b)("p",null,"Concatenates 2 values into a string."),Object(c.b)("h3",{id:"soql-query"},"SOQL Query"),Object(c.b)("p",null,"The query to execute an arbitrary SOQL statement and returns the\nresults."),Object(c.b)("h3",{id:"multiply"},"Multiply"),Object(c.b)("p",null,"Multiply two numbers."),Object(c.b)("h3",{id:"divide"},"Divide"),Object(c.b)("p",null,"Divide two numbers."),Object(c.b)("h3",{id:"get-tab-object-map"},"Get Tab Object Map"),Object(c.b)("p",null,"Returns a map of all visibble primary tabs and their associated objects (if available)."),Object(c.b)("h3",{id:"close-salesforce-tab"},"Close Salesforce Tab"),Object(c.b)("p",null,"Closes the Salesforce with a given id."),Object(c.b)("h3",{id:"delay"},"Delay"),Object(c.b)("p",null,"Delays execution for a period of time. (Keep in mind that your flow may be stopped if it runs longer than the maximum allowed execution window of 60 seconds.)"),Object(c.b)("h3",{id:"get-primary-tab-ids"},"Get Primary Tab Ids"),Object(c.b)("p",null,"Returns all of the IDs of open primary tabs."),Object(c.b)("h3",{id:"get-tabs-with-matching-url"},"Get Tabs With Matching Url"),Object(c.b)("p",null,"Returns the ids of the primary tabs with the url matching a provided string."),Object(c.b)("h3",{id:"length"},"Length"),Object(c.b)("p",null,"Returns the length of a value."),Object(c.b)("h3",{id:"slice"},"Slice"),Object(c.b)("p",null,"Returns the slice of a value."),Object(c.b)("h3",{id:"cast-a-value-to-a-type"},"Cast a Value to a Type"),Object(c.b)("p",null,"Cast an input value to a Javascript type, such as Number or String."),Object(c.b)("h3",{id:"get-ccp-logs"},"Get CCP Logs"),Object(c.b)("p",null,"The command to get the logs of agent from Connect."),Object(c.b)("h3",{id:"clear-all-properties"},"Clear All Properties"),Object(c.b)("p",null,"Clears all stored properties."),Object(c.b)("h3",{id:"unset-property"},"Unset Property"),Object(c.b)("p",null,"Removes the value assigned to a property in the local data store."),Object(c.b)("h3",{id:"show-attributes"},"Show Attributes"),Object(c.b)("p",null,"This command displays the contact attributes in the CCP overlay."),Object(c.b)("h3",{id:"is-task-contact-1"},"Is Task Contact?"),Object(c.b)("p",null,"Check if the contact is a task"),Object(c.b)("h3",{id:"create-task-contact-1"},"Create Task Contact"),Object(c.b)("p",null,"Creating a new task contact with certain inputs."),Object(c.b)("h3",{id:"pop-task-contacts-reference-urls-1"},"Pop Task Contact's Reference Urls"),Object(c.b)("p",null,"Pop any reference urls that are related to the task contact"),Object(c.b)("h3",{id:"start-recording"},"Start Recording"),Object(c.b)("p",null,"Use the contact recording API to start recording the call."),Object(c.b)("h3",{id:"stop-recording"},"Stop Recording"),Object(c.b)("p",null,"Use the contact recording API to stop recording the call."),Object(c.b)("h3",{id:"update-contact-attributes"},"Update Contact Attributes"),Object(c.b)("p",null,"Use the Connect API to update the attributes of the current contact."),Object(c.b)("h3",{id:"get-payload"},"Get Payload"),Object(c.b)("p",null,"Retrieve the payload of the CTI Flow. (The payload can be configured by CTI Actions.)"),Object(c.b)("h3",{id:"send-data-to-ccp-overlay"},"Send Data to CCP Overlay"),Object(c.b)("p",null,"Send an object to Data panel of CCP Overlay."),Object(c.b)("h3",{id:"leave-a-voicemail"},"Leave a Voicemail"),Object(c.b)("p",null,"Use Voicemail drops to leave a voicemail."))}b.isMDXComponent=!0}}]);