(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{102:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return p}));var n=a(3),c=a(7),r=(a(0),a(137)),s=a(138),i={id:"01-contact-flow-salesforce-lambdas",title:"Invoking the Amazon Connect Salesforce Lambda in a Contact Flow"},o={unversionedId:"classic/04-salesforce-lambdas/01-contact-flow-salesforce-lambdas",id:"classic/04-salesforce-lambdas/01-contact-flow-salesforce-lambdas",isDocsHomePage:!1,title:"Invoking the Amazon Connect Salesforce Lambda in a Contact Flow",description:"The Amazon Connect Contact Flow defines the routing behaviour within",source:"@site/docs/classic/04-salesforce-lambdas/01-contact-flow-salesforce-lambdas.md",slug:"/classic/04-salesforce-lambdas/01-contact-flow-salesforce-lambdas",permalink:"/amazon-connect-salesforce-cti/docs/classic/04-salesforce-lambdas/01-contact-flow-salesforce-lambdas",editUrl:"https://github.com/amazon-connect/amazon-connect-salesforce-cti/docs/classic/04-salesforce-lambdas/01-contact-flow-salesforce-lambdas.md",version:"current",sidebar:"classic",previous:{title:"Recording Controls",permalink:"/amazon-connect-salesforce-cti/docs/classic/03-cti-adapter/11-recording-controls"},next:{title:"Appendix A: CTI Flow Sources and Events",permalink:"/amazon-connect-salesforce-cti/docs/classic/05-appendices/01-appendix-a-cti-flow-sources-and-events/01-cti-flow-sources-and-events"}},l=[{value:"Salesforce Lookup",id:"salesforce-lookup",children:[]},{value:"Salesforce Create",id:"salesforce-create",children:[]},{value:"Salesforce Update",id:"salesforce-update",children:[]},{value:"Salesforce Phone Lookup",id:"salesforce-phone-lookup",children:[]},{value:"Salesforce query",id:"salesforce-query",children:[]},{value:"Salesforce queryOne",id:"salesforce-queryone",children:[]},{value:"Salesforce createChatterPost",id:"salesforce-createchatterpost",children:[]},{value:"Salesforce createChatterComment",id:"salesforce-createchattercomment",children:[]},{value:"Salesforce search",id:"salesforce-search",children:[]},{value:"Salesforce searchOne",id:"salesforce-searchone",children:[]}],b={toc:l};function p(e){var t=e.components,a=Object(c.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The Amazon Connect Contact Flow defines the routing behaviour within\nAmazon Connect, allowing contact center administrators to customize call\nflow behaviour such as playing prompts, invoking Lambda functions for\ndata lookup, and sending the call to different queues based on various\nconditions. As a result, Contact Flows are expected to be highly\ncustomized for each organization. While the Adapter package does not\nprovide any Contact Flows, there are some best practices that are worth\nhighlighting when utilizing the Adapter."),Object(r.b)("p",null,"The key element that enables Contact Flow integration is the AWS Lambda\nfunction. A Lambda function is a serverless piece of code that is\ninvoked by the Contact Flow. Typically, Lambda functions are used to\nupdate or retrieve information from databases or APIs, as well as\nintegrating with other systems. Lambda function can return any data\nprocessed to the Contact Flow where it can be used for decision making."),Object(r.b)("p",null,"Since Salesforce is highly customizable, the same Salesforce object in a\ndifferent environment may have different fields associated with it. As a\nresult, we can expect objects to have different requirements for how\nthey are retrieved, updated and created. The CTI Adapter was built to be\nable to query Salesforce objects regardless of how they have been\ncustomized. The user of the Adapter must therefore ensure they are\npassing the appropriate parameters to the Lambda functions provided as\npart of the Adapter."),Object(r.b)("p",null,'The Lambda function supports different operations, based on the\nmandatory input parameter "sf_operation".'),Object(r.b)("h2",{id:"salesforce-lookup"},"Salesforce Lookup"),Object(r.b)("p",null,'This operation is invoked by setting "sf_operation" to "lookup". In this\ncase, the Lambda function queries Salesforce for objects based on the\nparameters passed to it.'),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'"',Object(r.b)("strong",{parentName:"p"},"sf_object"),'" parameter contains Salesforce Object, like Case, Contact etc.')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'"',Object(r.b)("strong",{parentName:"p"},"sf_fields"),'" parameter contains a set of fields to be returned in a result. For example, if we are querying Case, we might specify "Id, IsClosed, Subject", or if we are querying Contact, we might specify "Id, Name, Email"')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'Specify a conditional parameter, for example "CaseNumber" or "homephone". Multiple values may be sent and they will be applied with "AND" operator.'))),Object(r.b)("p",null,"In the Amazon Connect Contact Flow Designer, add ",Object(r.b)("em",{parentName:"p"},"Integrate ",">"," Invoke\nAWS Lambda function")," block. Set 'sfInvokeAPI' Lambda ARN and make sure\nyou have granted Amazon Connect to invoke the Lambda Function."),Object(r.b)("p",null,"Example for phone number lookup:"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image154.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image155.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image156.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image157.png")}),Object(r.b)("p",null,"A result example:"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image158.png")}),Object(r.b)("p",null,"Example for Case lookup:"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image159.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image160.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image161.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image162.png")}),Object(r.b)("p",null,"A result example:"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image163.png")}),Object(r.b)("h2",{id:"salesforce-create"},"Salesforce Create"),Object(r.b)("p",null,'This operation is invoked by setting "sf_operation" to "create". In this\ncase, the Lambda function creates a Salesforce object based on the\nparameters passed to it.'),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'"',Object(r.b)("strong",{parentName:"p"},"sf_object"),'" parameter contains Salesforce to be created, like Case.')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Specify additional parameters for the Salesforce object to be created. Please be sure to include all parameters required to create the Salesforce object."))),Object(r.b)("p",null,"In the Amazon Connect Contact Flow Designer, add ",Object(r.b)("em",{parentName:"p"},"Integrate ",">"," Invoke\nAWS Lambda function")," block. Set 'sfInvokeAPI' Lambda ARN and make sure\nyou have granted Amazon Connect to invoke the Lambda Function."),Object(r.b)("p",null,"An example for Case creation:"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image164.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image165.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image166.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image167.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image168.png")}),Object(r.b)("p",null,"Contact Id is usually received as a result of a previous phone lookup,\nbut it can be also stored as an Attribute (i.e. sf_contact_id)"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image169.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image170.png")}),Object(r.b)("p",null,"A result example (providing the newly created Case Id):"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image171.png")}),Object(r.b)("h2",{id:"salesforce-update"},"Salesforce Update"),Object(r.b)("p",null,'This operation is invoked by setting "sf_operation" to "update". In this\ncase, the Lambda function updates a Salesforce object based on the\nparameters passed to it.'),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'"',Object(r.b)("strong",{parentName:"p"},"sf_object"),'" parameter contains Salesforce to be updated, like Case.')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Specify additional parameters for the Salesforce object to be created. Parameters must include ",Object(r.b)("inlineCode",{parentName:"p"},"sf_object")," and ",Object(r.b)("inlineCode",{parentName:"p"},"sf_id"),"."))),Object(r.b)("p",null,"In the Amazon Connect Contact Flow Designer, add ",Object(r.b)("em",{parentName:"p"},"Integrate ",">"," Invoke\nAWS Lambda function")," block. Set 'sfInvokeAPI' Lambda ARN and make sure\nyou have granted Amazon Connect to invoke the Lambda Function."),Object(r.b)("p",null,"An example for Case update:"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image172.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image173.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image174.png")}),Object(r.b)("p",null,"Case Id is usually received as a result of a previous case lookup, but\nit can be also stored as an Attribute (i.e. sf_case_id)"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image175.png")}),Object(r.b)("p",null,"A result example (HTTP Status Code):"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image176.png")}),Object(r.b)("p",null,'204 is "No Content" success code'),Object(r.b)("h2",{id:"salesforce-phone-lookup"},"Salesforce Phone Lookup"),Object(r.b)("p",null,'This operation is invoked by setting "sf_operation" to "phoneLookup". In\nthis case, the Lambda function queries Salesforce for Contacts based on\nthe parameter passed to it.'),Object(r.b)("p",null,"It uses the Salesforce Object Search Language (SOLS) to construct\ntext-based search queries against the search index, which gives\nsignificant performance improvement when searching phone number fields."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'"',Object(r.b)("strong",{parentName:"p"},"sf_phone"),'" parameter contains the phone number to search.')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'"',Object(r.b)("strong",{parentName:"p"},"sf_fields"),'" parameter contains a set of fields to be returned in a result. As it searches for Contacts, we might specify "Id, Name, Email"'))),Object(r.b)("p",null,"In the Amazon Connect Contact Flow Designer, add ",Object(r.b)("em",{parentName:"p"},"Integrate ",">"," Invoke\nAWS Lambda function")," block. Set 'sfInvokeAPI' Lambda ARN and make sure\nyou have granted Amazon Connect to invoke the Lambda Function."),Object(r.b)("p",null,"Example for phone number lookup:"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image177.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image156.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image178.png")}),Object(r.b)("p",null,"A result example:"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image158.png")}),Object(r.b)("h2",{id:"salesforce-query"},"Salesforce query"),Object(r.b)("p",null,'This operation is invoked by setting "sf_operation" to "query". In this\ncase, the Lambda function uses Salesforce Object Query Language (SOQL)\nto conduct a query against the Salesforce instance.'),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},'"',Object(r.b)("strong",{parentName:"li"},"query"),'" parameter contains the query.')),Object(r.b)("p",null,"Any additional parameters will replace text values in the original query\nso that queries can be dynamic based on values stored within the contact\nflow. For example, the parameter set:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'query: "select field from object"')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'field: "Id"')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'object: "Task"'))),Object(r.b)("p",null,'Will result in the query: "select Id from Task".'),Object(r.b)("img",{src:Object(s.a)("/img/classic/image179.png")}),Object(r.b)("p",null,"In the contact flow example below, we look for a customer by phone number."),Object(r.b)("img",{src:Object(s.a)("/img/classic/image180.png")}),Object(r.b)("p",null,"(full text of the value is \"select Id from Contact where Phone LIKE \\'%number%\\'\")"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image181.png")}),Object(r.b)("p",null,"This operation returns a response of:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n    "sf_records": [\n        {\n            "Id": "00303000001RZfIAAW"\n        }\n    ],\n    "sf_count": "1"\n}\n')),Object(r.b)("h2",{id:"salesforce-queryone"},"Salesforce queryOne"),Object(r.b)("p",null,'This operation is invoked by setting "sf_operation" to "queryOne" (case\nsensitive). In this case, the Lambda function uses Salesforce Object\nQuery Language (SOQL) to conduct a query against the Salesforce\ninstance, returning a result only when one record is returned from the\nquery. For query, the following parameter is required:'),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},'"',Object(r.b)("strong",{parentName:"li"},"query"),'" parameter contains the query.')),Object(r.b)("p",null,"Any additional parameters will replace text values in the original query\nso that queries can be dynamic based on values stored within the contact\nflow. For example, the parameter set:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'query: "select field from object"')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'field: "Id"')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'object: "Task"'))),Object(r.b)("p",null,'Will result in the query: "select Id from Task".'),Object(r.b)("p",null,"In the contact flow example below, we look for a customer by phone number."),Object(r.b)("img",{src:Object(s.a)("/img/classic/image179.png")}),Object(r.b)("p",null,"(full text of the value is \"select Id from Contact where Phone LIKE\n\\'%number%\\'\")"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image181.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image180.png")}),Object(r.b)("p",null,"This operation returns a response of:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n    "sf_records": [\n        {\n            "Id": "00303000001RZfIAAW"\n        }\n    ],\n    "sf_count": "1"\n}\n')),Object(r.b)("h2",{id:"salesforce-createchatterpost"},"Salesforce createChatterPost"),Object(r.b)("p",null,'This operation is invoked by setting "sf_operation" to\n"createChatterPost" (case sensitive). In this case, the Lambda function\nuses the Salesforce Connect REST API to create a chatter post (see\n',Object(r.b)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/quickreference_post_feed_item.htm"},"here"),").\nFor createChatterPost, the following parameters are required:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"sf_feedElementType")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"sf_subjectId")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"sf_messageType")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"sf_message"))),Object(r.b)("p",null,"The following parameter is optional:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"sf_mention")),Object(r.b)("p",null,"(refer to the api reference for value types)"),Object(r.b)("p",null,"Any additional parameters will replace text values in the sf_message so\nthat messages can be dynamic based on values stored within the contact\nflow. For example, the parameter set:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'sf_message: "Please help me with case {{caseId}}"')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"caseId: 1234"))),Object(r.b)("p",null,'Will result in the message: "Please help me with case 1234".'),Object(r.b)("p",null,"In the contact flow example below, we leave a chatter post on a contact."),Object(r.b)("img",{src:Object(s.a)("/img/classic/image182.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image183.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image184.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image185.png")}),Object(r.b)("p",null,'(full text of the value is "I had a problem during the call. My contact id is {{contactId}}.")'),Object(r.b)("p",null,"The operation returns a response of:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n    "Id": "0D503000000ILY5CAO"\n}\n')),Object(r.b)("img",{src:Object(s.a)("/img/classic/image186.png")}),"the Subject:",Object(r.b)("h2",{id:"salesforce-createchattercomment"},"Salesforce createChatterComment"),Object(r.b)("p",null,'This operation is invoked by setting "sf_operation" to\n"createChatterComment" (case sensitive). In this case, the Lambda\nfunction uses the Salesforce Connect REST to create a chatter comment\n(see ',Object(r.b)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_feed_element_capability_comments_items.htm"},"here"),").\nFor createChatterComment, the following parameters are required:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"sf_feedElementId")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"sf_commentType")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"sf_commentMessage"))),Object(r.b)("p",null,"(refer to the api reference for value types)"),Object(r.b)("p",null,"Any additional parameters will replace text values in the\nsf_commentMessage so that messages can be dynamic based on values stored\nwithin the contact flow. For example, the parameter set:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'sf_commentMessage: "Please help me with case {{ caseId }}"')),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"caseId: 1234"))),Object(r.b)("p",null,"In the contact flow example below, we leave a comment on a chatter post."),Object(r.b)("img",{src:Object(s.a)("/img/classic/image187.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image188.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image189.png")}),Object(r.b)("p",null,"The operation returns a response of:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n    "Id": "0D703000000ChhNCAS"\n}\n')),Object(r.b)("p",null,"See the chatter post appear attached to the Subject:"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image190.png")}),Object(r.b)("h2",{id:"salesforce-search"},"Salesforce search"),Object(r.b)("p",null,'This operation is invoked by setting "sf_operation" to\n"search" (case sensitive). In this case, the Lambda\nfunction uses the Salesforce REST to perform a parameterized search\n(see\n',Object(r.b)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_search_parameterized.htm"},"here"),").\nFor search, the following parameters are required:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"q")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"sf_fields")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"sf_object"))),Object(r.b)("p",null,"The following parameters are optional:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"where")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"overallLimit"))),Object(r.b)("p",null,"See the below example:"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image320.png")})," 58",Object(r.b)("img",{src:Object(s.a)("/img/classic/image321.png")})," 59",Object(r.b)("img",{src:Object(s.a)("/img/classic/image322.png")})," 60",Object(r.b)("img",{src:Object(s.a)("/img/classic/image323.png")})," 61",Object(r.b)("img",{src:Object(s.a)("/img/classic/image324.png")})," 62",Object(r.b)("img",{src:Object(s.a)("/img/classic/image325.png")})," 63",Object(r.b)("p",null,"The operation returns a response of:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n    "sf_records": [\n        {\n            "Id": "50001000001B9e6AAG", \n            "Subject": "test subject", \n            "Status": "New"\n        }, \n        {\n            "Id": "50001000001B9eWAAS", \n            "Subject": "test subject", \n            "Status": "New"\n        }, \n        {\n            "Id": "50001000001BDgiAAG", \n            "Subject": "test subject", \n            "Status": "New"\n        }\n    ], \n    "sf_count": 3\n}\n')),Object(r.b)("h2",{id:"salesforce-searchone"},"Salesforce searchOne"),Object(r.b)("p",null,'This operation is invoked by setting "sf_operation" to\n"searchOne" (case sensitive). In this case, the Lambda\nfunction uses the Salesforce REST to perform a parameterized search\n(see\n',Object(r.b)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_search_parameterized.htm"},"here"),").\nFor search, the following parameters are required:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"q")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"sf_fields")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"sf_object"))),Object(r.b)("p",null,"The following parameter is optional:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"where")),Object(r.b)("p",null,"See the below example:"),Object(r.b)("img",{src:Object(s.a)("/img/classic/image326.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image327.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image322.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image323.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image324.png")}),Object(r.b)("img",{src:Object(s.a)("/img/classic/image325.png")}),Object(r.b)("p",null,"The operation returns a response of:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n    "Id": "50001000001BIn6AAG",\n    "Subject": "test subject unique", \n    "Status": "New", \n    "sf_count": 1\n}\n')))}p.isMDXComponent=!0},137:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return j}));var n=a(0),c=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,c=function(e,t){if(null==e)return{};var a,n,c={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(c[a]=e[a]);return c}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(c[a]=e[a])}return c}var l=c.a.createContext({}),b=function(e){var t=c.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=b(e.components);return c.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},u=c.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=b(a),u=n,j=p["".concat(s,".").concat(u)]||p[u]||m[u]||r;return a?c.a.createElement(j,i(i({ref:t},l),{},{components:a})):c.a.createElement(j,i({ref:t},l))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,s=new Array(r);s[0]=u;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var l=2;l<r;l++)s[l]=a[l];return c.a.createElement.apply(null,s)}return c.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},138:function(e,t,a){"use strict";a.d(t,"b",(function(){return r})),a.d(t,"a",(function(){return s}));var n=a(22),c=a(139);function r(){var e=Object(n.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,r=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var r=void 0===n?{}:n,s=r.forcePrependBaseUrl,i=void 0!==s&&s,o=r.absolute,l=void 0!==o&&o;if(!a)return a;if(a.startsWith("#"))return a;if(Object(c.b)(a))return a;if(i)return t+a;var b=a.startsWith(t)?a:t+a.replace(/^\//,"");return l?e+b:b}(r,a,e,t)}}}function s(e,t){return void 0===t&&(t={}),(0,r().withBaseUrl)(e,t)}},139:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function c(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return c}))}}]);